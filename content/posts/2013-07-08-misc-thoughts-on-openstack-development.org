去年 12 月份的时候我曾经给自己写了一份 "OpenStack 开发基础知识 " 书单，贴在墙上，
书单大概如下：

- 网络基础：
  - [[http://book.douban.com/subject/4793807/][+Foundations of Python Network Programming+]]
  - [[http://book.douban.com/subject/2970300/][+计算机网络+]]
  - [[http://book.douban.com/subject/1440226/][+HTTP+]]
  - [[http://book.douban.com/subject/10531427/][计算机网络教程]]
  - [[http://book.douban.com/subject/1095214/][TCP/IP 详解]]
  - [[http://book.douban.com/subject/2016013/][+Internetworking+ With TCP/IP]]
- 语言基础：
  - [[http://book.douban.com/subject/4249385/][+Pro Python+]]
  - [[http://book.douban.com/subject/4086938/][Metaprogramming Ruby]]
- JavaScript:
  - [[http://book.douban.com/subject/1869705/][+JavaScript+ 高级程序设计]]
  - [[http://book.douban.com/subject/3012828/][JavaScript 语言精髓与编程实践]]
- Web Design
  - [[http://book.douban.com/subject/10448952/][+The Definitive Guide+ to HTML5]]
  - [[http://book.douban.com/subject/1937913/][无懈可击的 Web 设计]]
- [[http://book.douban.com/subject/6000169/][+Rabb+itMQ in Action]]
- Database
  - [[http://book.douban.com/subject/3354490/][+MySQL 必知必会+]]
  - [[http://book.douban.com/subject/3182110/][数据库系统基础教程]]
  - [[http://book.douban.com/subject/1173549/][数据库设计教程]]
- Django
  - [[http://book.douban.com/subject/3617254/][+The Definitive Guide to+ Django]]
  - [[http://book.douban.com/subject/3086812/][Pro Django]]

读书进度 = 书名中划线部分的长度/书名的长度。之所以有这份书单，是因为在前面几个月
的开发中，我发现自己的基础知识薄弱，远远不能满足 OpenStack 开发的需要。虽然自己
已经能够按照公司的基本要求，照猫画虎地开发出几个能用的所谓 Feature，但是我内心明
白，自己的能力上尚不足以透彻理解 OpenStack 代码[1]。

我认为自己还算是一个比较努力的人，并且自认为对自己目前所从事的行业还是有着满心的
热爱和期待，期待自己能做出一些有用的产品，留下一些真正有用的能改善人们生活的东西。
这个宏大的愿望映射到眼前，就是努力使自己成为一个合格的 Full-Stack 类型的 Web 开
发工程师。而进一步将眼前目标付诸行动，就是上面的书单了。我原本定的时间是 3--5 个
月左右，不过现在看来还是太狂妄太浮躁了。客观上是自己要工作，时间不完全都是自己的；
主观上则是自己“深度优先，随性而为”的阅读习惯常常会不自主的打乱原本订好的读书计划。
比方说我在读 "Pro Python" 的时候为了搞清楚细节会去读 "[[http://book.douban.com/subject/3117898/][Python 源码剖析]]"，会去尝试
理解 Python 的 [[http://python3.blogspot.com/][整个历史 ]]；在读 "HTTP" 的时候为了理解 [[http://en.wikipedia.org/wiki/Representational_state_transfer][REST]]，会去读《[[http://book.douban.com/subject/4791069/][REST in
Practice]]》；而我在尝试理解 Python [[http://en.wikipedia.org/wiki/Test-driven_development][TDD]] 的时候会把 Ruby 中关于 [[http://cukes.info/][Cubumber]] 的书加入阅
读计划。这或许不是一个良好的阅读习惯，但这能保持我的兴趣，这就够了。

我不是一个 Top 的工程师，至少目前不是——Top 的工程师不会像我一样还在费力的学习理
解 REST/TDD 这些概念性的东西。我知道 Top 的工程师在哪里[2]。这类人天赋异禀，并且
在很早的时候就接触计算机。在你还在骑着自行车围着院子绕圈的时候他们已经开始理解算
法和数据结构，在你刚刚写出"hello world"的时候他们已经能写出成型的软件作品，在你
毕业之际为找工作焦头烂额的时候，他们已经受过了 1 万小时的训练，有更好的机会和最
聪明的人合作更快的提高自己。这个博客基本上忠实记录了我正式开始认真学习计算机的全
部历程。四年来我几乎做过各种各样的东西，Windows Mobile 开发，Java SSH（已经忘光
光 ），OpenGL 程序，Hadoop，Python/FFmpeg 写的转码系统等等，很杂，也很浅。但我一
直坚持一个方向，就是拥抱开源，先是尝试学习基础知识，用好 Linux/Emacs 这类基本工
具，毕业工作后开始去尝试读一些开源代码，提一些无关痛痒的 patch 试图接近开源，这
一年来又开始尝试理解 OpenStack，并真正的提交了一些 patch。我不敢评价 OpenStack
的设计是否优秀，事实上我还没有这个能力去完全理解它，更妄论评价了。但是 OpenStack
的开发确实让我学到了很多东西，我开始理解了 TDD，开始逐理解了 REST 和 Web Service，
开始逐渐理解作为工程语言而不是脚本语言的 Python，开始理解 Message Queue。而我也
通过自己的努力，让基于 Jenkins/Gerrit 的自动化测试部署的全套流程在公司运转了起来。

两年前信心满满刚来北京的时候，我从未想过自己会那么快的离开百度[3]，一年前开始寻
找新的工作机会的时候，我完全没有听过 OpenStack 这个词。当初一心坚持离开学校是为
了远离校园里学习的束缚，现在走向工作岗位又会感慨感叹时间的宝贵和校园里相对的自由。
说白了，我是一个贪心的实用主义者，胸无大志，从来不会想五年以后的事情，学校里面不
想听无聊的课程，就天南海北山山水水的疯跑，哪怕一学期挂科五门依然无所畏惧不懂屈服；
工作以后顶撞上司就来个偷得浮生半年闲，躲进小楼成一统，管他春夏与秋冬，云卷云舒花
开花落——但为了生活还是要出来找工作。

貌似扯的有些远了……最后回到本文的正题吧，OpenStack的开发。上个星期做了两个东西，
第一是做了个 OpenStack 代码的国内镜像，方便教育网内学生党[4]，地址是：

- [[http://git.oschina.net/openstack]]
- [[http://git.oschina.net/openstack-dev]]

第二是基于 Vagrant 做了个 OpenStack 的开发环境，地址是：

- [[https://github.com/xiaohanyu/vagrant-hackerbox]]
- [[https://github.com/xiaohanyu/vagrant-ansible-devstack]]

好了，吹牛到此结束，各位好梦晚安。

[1] 比如我至今依旧没完彻底理解 OpenStack 中基于 [[http://www.sqlalchemy.org/][SQLAlchemy]] ORM 的数据模型，基于
iptables/openvswitch 等的底层网络原理，更妄想理解 KVM/Xen/内核这类 CS 工程领域真
正“高富帅”的东西了。事实上，如果没有扎实的数据库/网络/操作系统知识，要彻底理解这
些东西是很难的。

[2] 比如[[http://tianyicui.com/][这里]]，[[http://blog.peakji.com/][这里]]和[[https://www.byvoid.com/][这里]]。

[3] 也从未想到过自己的一篇文章能引起那么大的争议。

[4] 顺便吐槽下北大的校园网，30元 /80 小时，50元 /160 小时，90元不限时包月，超时
流量 1 元 /MB，这价格都快赶上北京正常的联通宽带了。而且速度那么慢 (github clone
20k/s)，北京联通现在可是号称 20M 光纤入户的。这就是世界一流大学的校园网，可笑。
